{"name":"Logson","tagline":"Simple middleware library to get the application logs (Express) and do whatever you want with them","body":"# logson\r\n\r\n[![Build Status][travis-image]][travis-url]\r\n[![Gitter][gitter-image]][gitter-url]\r\n\r\nSimple middleware library to get the application logs (Express) and do whatever you want with them\r\n\r\n## Install\r\n\r\nWith npm:\r\n\r\n```js\r\n  $> npm install --save logson\r\n```\r\n\r\n## API\r\n\r\n```js\r\n  var logson = require('logson');\r\n```\r\n\r\n### logson(options|callback, [callback])\r\n\r\nYou can use it with options or without, in this case the first param will be the callback.\r\n\r\n```js\r\n  var app = require('express')();\r\n  var logson = require('logson');\r\n\r\n  app.use(logson(function(log) {\r\n    // Then you can use the log here\r\n  }));\r\n```\r\n\r\nWith options:\r\n\r\n```js\r\n  var app = require('express')();\r\n  var logson = require('logson');\r\n\r\n  var options = {\r\n    parent: 'parent'\r\n  }\r\n\r\n  app.use(logson(options, function(log) {\r\n    // Then you can use the log here\r\n  }))\r\n```\r\n\r\nBy default the format is the following:\r\n\r\n```js\r\n  { }\r\n```\r\n\r\n#### req.\\_logson\r\n\r\nWhen you use `logson` it declares an attribute to the `req` object with the name `_logson`. You can set whatever you want to this attribute that will be merged to the final log.\r\n\r\n### Options\r\n\r\n#### format\r\n\r\nYou can specify different types of log format (the array represents all the keys of the log):\r\n\r\n  * combined\r\n\r\n```\r\n  ['remoteAddr', 'date', 'method', 'url', 'httpVersion', 'status', 'contentLength', 'referrer', 'userAgent']\r\n```\r\n\r\n  * common\r\n\r\n```\r\n  [ 'remoteAddr', 'date', 'method', 'httpVersion', 'status', 'contentLength']\r\n```\r\n\r\n  * dev\r\n\r\n```\r\n  [ 'method', 'status', 'responseTime', 'contentLength']\r\n```\r\n\r\n  * short\r\n\r\n```\r\n  [ 'remoteAddr', 'url', 'httpVersion', 'method', 'responseTime', 'contentLength' ]\r\n```\r\n\r\n  * tiny\r\n\r\n```\r\n  [ 'method', 'url', 'status', 'responseTime', 'contentLength' ]\r\n```\r\n\r\n#### parent\r\n\r\nThis options encapsulates the log object:\r\n\r\n```js\r\n  var logson = require('logson');\r\n\r\n  var options = {\r\n    parent: 'parent'\r\n  };\r\n\r\n  logson(options, funciton(log) {\r\n    // The log object is { parent: log }\r\n  })\r\n```\r\n\r\n#### extras\r\n\r\nWith this option you can add extra fields to the JSON log, when extras are defined you can have access to the `req` and `res` objects:\r\n\r\n```js\r\n  var logson = require('logson');\r\n\r\n  var options = {\r\n    extras: function(req, res) {\r\n      return {\r\n        cookies: req.cookies\r\n      }\r\n    }\r\n  };\r\n\r\n  logson(options, funciton(log) {\r\n    // The log object has the cookies field on it\r\n  })\r\n```\r\n\r\n`extras` use a deepmerge methology so the object returned with it will be merged with the log.\r\n\r\n### Merge order\r\n\r\nThere are so many configurations that merge between them so the order is important, to no override fields.\r\n\r\nThe ored of this merge is the following: ``req._logson + format + parent + extras``\r\n\r\n## Examples\r\n\r\nA simple Use Case for `logson` is to save the log object to the DB, for example elastic:\r\n\r\n```js\r\n  // Your elastic configuration\r\n  var elastic = require('./elastic');\r\n  var app = require('express')();\r\n\r\n  app.use(logson(function(log) {\r\n    elastic.create({\r\n      index: 'index',\r\n      type: 'type',\r\n      body: log\r\n    });\r\n  })\r\n```\r\n\r\nIf you want to save the cookies and wrap the log into a `request` name use the following:\r\n\r\n```js\r\n  // All your app configuration\r\n  var cookieParser = require('cookie-parser');\r\n\r\n  app.use(cookieParser('pass'));\r\n\r\n  var conf = {\r\n    parent: 'request',\r\n    extras: function(req, res) {\r\n      return {\r\n        request: {\r\n          headers: {\r\n            cookeis: req.signedCookies\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  app.use(conf, logson(function(log) {\r\n    elastic.create({\r\n      index: 'index',\r\n      type: 'type',\r\n      body: log\r\n    });\r\n  })\r\n```\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[travis-image]: https://travis-ci.org/XescuGC/logson.svg\r\n[travis-url]: https://travis-ci.org/XescuGC/logson\r\n[gitter-image]: https://badges.gitter.im/Join%20Chat.svg\r\n[gitter-url]: https://gitter.im/XescuGC/logson?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}